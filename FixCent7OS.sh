mkdir -p /home/hardening_20200513
useradd vt_admin
#echo -e 'Vts@2020\nVts@2020' | passwd vt_admin
#echo -e 'Viettel!@#2020\nViettel!@#2020' | passwd app
echo -e "\nResult:"; standard=`echo -e "%wheel\tALL=(ALL)\tALL"`; check=`cat /etc/sudoers | grep -v ^# | grep "$standard"`; if [[ -z $check ]]; then echo "Nothing to do"; else sed -i '/%wheel/s/^#\?/#/' /etc/sudoers;echo -e "Fixed $standard";fi; echo "";
echo -e "\nResult:"; standard=`echo -e "%wheel ALL=(ALL) NOPASSWD: /usr/bin/tcptraceroute, /usr/bin/traceroute, /usr/sbin/iotop, /usr/sbin/tcpdump, /usr/sbin/lsof"`; check=`cat /etc/sudoers | grep -v ^# | grep "$standard"`; if [[ $check ]]; then echo "Nothing to do"; else sed -i '108i%wheel ALL=(ALL) NOPASSWD: /usr/bin/tcptraceroute, /usr/bin/traceroute, /usr/sbin/iotop, /usr/sbin/tcpdump, /usr/sbin/lsof' /etc/sudoers;echo -e "Fixed $standard";fi; echo "";
echo -e "\nResult:"; check=`service bluetooth status | grep running`; if [[ -z $check ]]; then echo "Nothing to do"; else service bluetooth stop; chkconfig bluetooth off; echo "Stopped service bluetooth"; fi; echo "";
if [ ! -e /home/hardening_20200513/group ]; then if [ ! -e /etc/group ]; then touch /etc/group; fi;cp /etc/group /home/hardening_20200513/; fi;
chage -l vt_admin > /home/hardening_20200513/vt_admin.expiredate;
chage -l root > /home/hardening_20200513/root.expiredate;
echo -e "\nResult:"; check=`cat /etc/group | grep -v ^# | grep wheel | grep vt_admin`; if [[ -z $check ]]; then usermod -G wheel vt_admin; echo "Inserted vt_admin to wheel group"; else echo "Nothing to do for Insert vt_admin"; fi; echo "";
echo -e "\nResult:"; check=`cat /etc/group | grep -v ^# | grep wheel | grep monitor`; if [[ -z $check ]]; then usermod -G wheel monitor; echo "Inserted monitor to wheel group"; else echo "Nothing to do for Insert monitor"; fi; echo "";
echo -e "\nResult:"; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400 || $3==0) {print $1}'`; for i in $list; do chage -m 0 -M 99999 -I -1 -E -1 $i;  echo "Fixed no expire password user $i"; done; echo "";
if [ ! -e /home/hardening_20200513/su ]; then if [ ! -e /etc/pam.d/su ]; then touch /etc/pam.d/su; fi;cp /etc/pam.d/su /home/hardening_20200513/; fi;
echo -e "\nResult:"; folder="/etc/pam.d/su"; standard=`echo -e "auth\trequired\tpam_wheel.so use_uid"`; check=`cat $folder | grep -v ^# | grep -w auth | grep -w required | grep -w "pam_wheel.so" | grep -w "use_uid"`; if [[ -z $check ]]; then comment=`cat $folder | grep "require a user to be"`; if [[ ! -z $comment ]]; then sed -i "s/$comment/$comment\n$standard/g" $folder; echo "Inserted config: $standard"; else echo "Nothing to do for user thuoc group wheel duoc phep su root"; fi; elif [[ $check == $standard ]]; then echo "Nothing to do user thuoc group wheel duoc phep su root"; else sed -i "s/$check/#$check\n$standard/g" $folder; echo "Replaced config: $standard"; fi; echo "";
if [ ! -e /home/hardening_20200513/system-auth ]; then if [ ! -e /etc/pam.d/system-auth ]; then touch /etc/pam.d/system-auth; fi;cp /etc/pam.d/system-auth /home/hardening_20200513/; fi;
if [ ! -e /home/hardening_20200513/login.defs ]; then if [ ! -e /etc/login.defs ]; then touch /etc/login.defs; fi;cp /etc/login.defs /home/hardening_20200513/; fi;
echo -e "\nResult:"; folder="/etc/pam.d/system-auth"; para2=`cat /etc/pam.d/system-auth | grep -v ^# | grep password | grep retry | awk '{print $2}'`; para3=`cat /etc/pam.d/system-auth | grep -v ^# | grep password | grep retry | awk '{print $3}'`; if [[ -z $para2 || -z $para3 ]]; then echo "Nothing to do"; else standard=`echo -e "password\t$para2\t$para3\ttry_first_pass\tretry=3\tminlen=8\tdcredit=-1\tucredit=-1\tocredit=-1\tlcredit=-1"`; check=`cat $folder | grep -v ^# | grep ^password | grep -w $para2| grep -w $para3`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for password"; else sed -i "s/$check/#$check\n$standard/g" $folder; echo "Replaced config: $standard"; fi; fi; echo "";
echo -e "\nResult:"; folder="/etc/pam.d/system-auth"; standard=`echo -e "password\tsufficient\tpam_unix.so\tsha512\tshadow\tnullok\ttry_first_pass use_authtok\tremember=5"`; check=`cat $folder | grep -v ^# | grep ^password | grep -w sufficient | grep -w pam_unix.so`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for sha512"; else sed -i "s/$check/#$check\n$standard/g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; folder="/etc/login.defs"; standard=`echo -e "PASS_MAX_DAYS\t90"`; check=`cat $folder | grep -v ^# | grep ^PASS_MAX_DAYS`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for pass max day"; else sed -i "s/$check/#$check\n$standard/g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; check=`authconfig --test | grep hashing | grep sha512`; if [[ -z $check ]]; then authconfig --passalgo=sha512 --update;  echo "Updated: authconfig --passalgo=sha512 --update"; else echo "Nothing to do for hashing"; fi; echo "";
if [ ! -e /home/hardening_20200513/sshd_config ]; then if [ ! -e /etc/ssh/sshd_config ]; then touch /etc/ssh/sshd_config; fi;cp /etc/ssh/sshd_config /home/hardening_20200513/; fi;
if [ ! -e /home/hardening_20200513/profile ]; then if [ ! -e /etc/profile ]; then touch /etc/profile; fi;cp /etc/profile /home/hardening_20200513/; fi;
echo -e "\nResult:"; folder="/etc/ssh/sshd_config"; standard="Protocol 2"; check=`cat $folder | grep -v ^# | grep -w "Protocol"`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for Protocol 2"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; folder="/etc/ssh/sshd_config"; standard="PermitRootLogin no"; check=`cat $folder | grep -v ^# | grep -w "PermitRootLogin"`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for PermitRootLogin"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; check=`cat /etc/ssh/sshd_config | grep -v ^# | grep -w AllowUsers`;if [[ -z $check ]]; then echo AllowUsers >> /etc/ssh/sshd_config; fi; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400) {print $1}'`; for user in $list;do check=`cat /etc/ssh/sshd_config | grep -v ^# | grep -w AllowUsers | grep -w $user`; if [[ $check == *$user* ]] ; then echo "$user OK"; else sed -i "s/AllowUsers/AllowUsers $user/g" /etc/ssh/sshd_config ; echo $user Inserted; fi; done; echo "";
echo -e "\nResult:"; folder="/etc/profile"; standard="TMOUT=300"; check=`cat $folder | grep -v ^# | grep $standard`; if [[ -z $check ]]; then echo -e "TMOUT=300\nreadonly TMOUT\nexport TMOUT" >> $folder; echo -e "Inserted config:\n$standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for TMOUT=300"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo -e "Replaced config:\n$standard";fi; echo "";
service sshd reload
find / -xdev \( -nouser -o -nogroup \) -print > /home/hardening_20200513/unowner_file.txt
echo -e "\nResult:"; check=`find / -xdev \( -nouser -o -nogroup \) -print`; if [[ -z $check ]]; then echo "Khong co file unowner ==> OK"; else for i in $check; do chown vt_admin:vt_admin $i; done; echo "Changed unowner file";fi; echo "";
ls -la /etc/ | grep cron > /home/hardening_20200513/cron.permitsion;
echo -e "\nResult:"; check=`ls /etc/ | grep -w "cron.allow"`; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400 || $3==0) {print $1}'`; if [[ -z $check ]]; then touch /etc/cron.allow; echo "Inserted /etc/cron.allow"; for i in $list; do echo "$i" >> /etc/cron.allow; echo "Inserted cron $i"; done; else for i in $list; do check2=`cat /etc/cron.allow |grep -v ^# | grep -w "$i"`; if [[ -z $check2 ]]; then echo "$i" >> /etc/cron.allow; echo "Inserted cron $i"; else echo "Existed cron $i"; fi; done; fi; echo "";
echo -e "\nResult:"; check=`ls /etc/ | grep -w "cron.deny"`; if [[ ! -z $check ]]; then rm -f /etc/$check; echo "Removed cron.deny"; else echo "Nothing to do for cron.deny"; fi; echo "";
echo -e "\nResult:"; list=`ls /etc/ | grep "cron\|crontab"`; for i in $list; do chown -R root:root /etc/$i; chmod -R 700 /etc/$i; echo "Da phan quyen $i"; done; echo "";
if [ -e /etc/crontab ]; then chmod 600 /etc/crontab; fi;
if [ -e /etc/anacrontab ]; then chmod 600 /etc/anacrontab; fi;
if [ -e /etc/cron.allow ]; then chmod 600 /etc/cron.allow; fi;
if [ -d /etc/cron.d/ ]; then chmod 600 /etc/cron.d/*; fi;
if [ ! -e /home/hardening_20200513/rsyslog.conf ]; then if [ ! -e /etc/rsyslog.conf ]; then touch /etc/rsyslog.conf; fi;cp /etc/rsyslog.conf /home/hardening_20200513/; fi;
if [ ! -e /home/hardening_20200513/logrotate.conf ]; then if [ ! -e /etc/logrotate.conf ]; then touch /etc/logrotate.conf; fi;cp /etc/logrotate.conf /home/hardening_20200513/; fi;
if [ ! -e /home/hardening_20200513/bashrc ]; then if [ ! -e /etc/bashrc ]; then touch /etc/bashrc; fi;cp /etc/bashrc /home/hardening_20200513/; fi;
echo -e "\nResult:"; if [ -d "/var/log/iptables" ]; then echo "Nothing to do for log"; else mkdir -p /var/log/iptables; chmod 600 /var/log/iptables; echo "Created iptables_log directory"; fi; echo "";
echo -e "\nResult:"; echo -e "weekly\nrotate 12\ncreate\ndateext\ninclude /etc/logrotate.d\n/var/log/wtmp {\n create 0664 root utmp\n}\n/var/log/btmp {\n missingok\n monthly\n create 0600 root utmp\nrotate 3 \n}"  > /etc/logrotate.conf; echo "Fixed file /etc/logrotate.conf"; echo "";
echo -e "\nResult:"; echo -e "/var/log/iptables/iptables.log {\n daily\n rotate 30\n copytruncate\n compress\n notifempty\n missingok\n}" > /etc/logrotate.d/iptables; echo "Fixed file /etc/logrotate.d/iptables"; echo "";
echo -e "\nResult:"; echo -e "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n{\n\tcompress\n\tsharedscripts\n\tpostrotate\n\t/bin/kill -HUP \`cat /var/run/syslogd.pid 2> /dev/null\` 2> /dev/null || true\n\tendscript\n}" > /etc/logrotate.d/syslog; echo "Fixed file /etc/logrotate.d/syslog"; echo "";
echo -e "\nResult:"; echo -e "/var/log/cmdlog.log\n{\n compress\n weekly\n rotate 12\n sharedscripts\n postrotate\n /bin/kill -HUP \`cat /var/run/syslogd.pid 2> /dev/null\` 2> /dev/null || true\n endscript\n}" > /etc/logrotate.d/cmdlog; echo "Fixed file /etc/logrotate.d/cmdlog"; echo "";
echo -e "\nResult:"; check=`cat /etc/bashrc | grep -v ^# | grep -w "local6.debug"`; if [[ -z $check ]]; then echo "export PROMPT_COMMAND='RETRN_VAL=\$?;logger -p local6.debug \"[cmdlog] \$(whoami) [\$\$]: \$(history 1 | sed \"s/^[ ]*[0-9]\+[ ]*//\" ) [\$RETRN_VAL] [\$(echo \$SSH_CLIENT | cut -d\" \" -f1)]\"'" >> /etc/bashrc; echo "Inserted: cmdlog local6.debug"; else echo "Nothing to do for cmdlog local6";fi; echo "";
echo -e "\nResult:"; check1=`cat /etc/rsyslog.conf | grep -v ^# | grep cmdlog.log`; check2=`cat /etc/rsyslog.conf | grep -v ^# | grep iptables.log`; check3=`cat /etc/rsyslog.conf | grep -v ^# | grep "/var/log/message"`; check4=`cat /etc/rsyslog.conf | grep -v ^# | grep "/var/log/secure"`; if [[ -z $check1 ]]; then echo -e "local6.*\t/var/log/cmdlog.log" >> /etc/rsyslog.conf; echo "Inserted: cmdlog"; else echo "Nothing to do for cmdlog"; fi; if [[ -z $check2 ]]; then echo -e "kern.debug\t/var/log/iptables/iptables.log" >> /etc/rsyslog.conf; echo "Inserted: iptables.log"; else echo "Nothing to do for iptables log"; fi; if [[ -z $check3 ]]; then echo -e "*.info;mail.none;authpriv.none;cron.none\t/var/log/messages"  >>  /etc/rsyslog.conf; echo "Inserted: messages log"; else echo "Nothing to do for message log"; fi; if [[ -z $check4 ]]; then echo -e "authpriv.*\t/var/log/secure" >>  /etc/rsyslog.conf; echo "Inserted: secure log"; else echo "Nothing to do for secure log"; fi; echo "";
echo -e "\nResult:"; check=`service rsyslog status | grep "running"`; if [[ ! -z $check ]]; then echo "rsyslog dang hoat dong"; service rsyslog restart; else echo -e "rsyslog khong hoat dong:\n$check ==> Khong thuc hien restart rsyslog";fi; echo "";
if [[ -e /var/spool/cron/root && ! -e /home/hardening_20200513/root ]];then cp /var/spool/cron/root /home/hardening_20200513/;fi;
if [ ! -e /home/hardening_20200513/ntp.conf ]; then if [ ! -e /etc/ntp.conf ]; then touch /etc/ntp.conf; fi;cp /etc/ntp.conf /home/hardening_20200513/; fi;
echo -e "\nResult:"; folder="/etc/ntp.conf"; standard="server 192.168.181.50"; check=`cat $folder | grep -v ^# | grep -w "$standard"`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for NTP server"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; folder="/var/spool/cron/root"; if [ ! -e $folder ]; then echo "*/5 * * * * /usr/sbin/ntpdate -u 192.168.181.50" > /var/spool/cron/root; echo "Inserted ntpdate crontab for root"; else check=`cat $folder | grep -v ^# | grep ntpdate | grep "\-u"`; if [[ -z $check ]]; then echo "*/5 * * * * /usr/sbin/ntpdate -u 192.168.181.50" >> /var/spool/cron/root; echo "Inserted ntpdate crontab for root"; else echo "Nothing to do for Inserted ntpdate crontab";fi; fi; echo "";
service ntpd restart
service cups status > /home/hardening_20200513/cups-status.txt; service postfix status > /home/hardening_20200513/postfix-status.txt; service NetworkManager status > /home/hardening_20200513/NetworkManager-status.txt; service kdump status > /home/hardening_20200513/kdump-status.txt;
echo -e "\nResult:"; check=`service cups status | grep running`; if [[ -z $check ]]; then echo "Nothing to do"; else service cups stop; chkconfig cups off; echo "Stopped service cups"; fi; echo "";
echo -e "\nResult:"; check=`service NetworkManager status | grep running`; if [[ -z $check ]]; then echo "Nothing to do for NetworkManager"; else service NetworkManager stop; chkconfig NetworkManager off; echo "Stopped service NetworkManager"; fi; echo "";
echo -e "\nResult:"; check=`systemctl status postfix | grep "Active: active"`; if [[ -z $check ]]; then echo "Nothing to do for postfix"; else systemctl stop postfix; systemctl disable postfix; echo "Stopped service postfix"; fi; echo "";
echo -e "\nResult:"; check=`systemctl status kdump | grep "Active: active"`; if [[ ! -z $check ]]; then echo "Nothing to do for kdump"; else systemctl start kdump; systemctl enable kdump; echo "Started service kdump"; fi; echo "";
echo -e "\nResult:"; check=`lsmod | grep "ipt" 2> /dev/null`; if [[ -z $check ]]; then echo "iptables khong hoat dong ==> WARNING"; else echo "iptables dang hoat dong ==> OK"; fi; echo "";
echo -e "\nResult:"; standard=524288; file="/etc/sysctl.conf"; curr_file="/proc/sys/net/netfilter/nf_conntrack_max"; curr=`cat $curr_file`; para="net.netfilter.nf_conntrack_max"; conf=`cat $file | grep -v ^# | grep "$para"`; if [[ -z $conf ]]; then if [ $standard -lt $curr ]; then echo "$para = $curr" >> $file; echo "Inserted $para = $curr to $file"; else echo "$para = $standard" >> $file; echo "$standard" > $curr_file; echo "Inserted $para = $standard to $file and $curr_file";fi; elif [ $standard -lt $curr ]; then if [[ $conf != "$para = $curr" ]]; then sed -i "s/$conf/#$conf\n$para = $curr/g" $file; echo "Replaced $para = $curr to $file"; else echo "Nothing to do"; fi; elif [[ $conf != "$para = $standard" ]]; then sed -i "s/$conf/#$conf\n$para = $standard/g" $file; echo "$standard" > $curr_file; echo "Replaced $para = $standard to $file and $curr_file";  else echo "$standard" > $curr_file; echo "Nothing to do for nf_conntrack_max"; fi; echo "";
echo -e "\nResult:"; hashsize=$((`cat /etc/sysctl.conf | grep -v ^# | grep "net.netfilter.nf_conntrack_max" | awk '{print $3}'`/4)); echo "options nf_conntrack hashsize=$hashsize" > /etc/modprobe.d/hashsize.conf; echo "$hashsize" > /sys/module/nf_conntrack/parameters/hashsize; echo "Replace config hashsize $hashsize"; echo "";
echo -e "\nResult:"; standard=0; file="/etc/sysctl.conf"; curr_file="/proc/sys/vm/zone_reclaim_mode"; para="vm.zone_reclaim_mode"; conf=`cat $file | grep -v ^# | grep "$para"`; if [[ -z $conf ]]; then echo "$para = $standard" >> $file; echo "$standard" > $curr_file; echo "Inserted $para = $standard to $file and $curr_file"; elif [[ $conf != "$para = $standard" ]]; then sed -i "s/$conf/#$conf\n$para = $standard/g" $file; echo "$standard" > $curr_file; echo "Replaced $para = $standard to $file and $curr_file";  else echo "$standard" > $curr_file; echo "Nothing to do for zone_reclaim_mode"; fi; echo "";
if [ ! -e /home/hardening_20200513/localtime ]; then if [ ! -e /etc/localtime ]; then touch /etc/localtime; fi;cp /etc/localtime /home/hardening_20200513/; fi;
echo -e "\nResult:"; check=`date +"%Z %z" | grep -w 0700`; if [[ $check == *0700* ]]; then echo "Nothing to do for Timezone";elif [ -e /etc/localtime ]; then rm -f /etc/localtime; ln -s /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime; echo "Replaced softlink localtime ITC+7"; else ln -s /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime; echo "Inserted softlink localtime ITC+7"; fi; echo "";
sestatus > /home/hardening_20200513/sestatus.txt;
if [ ! -e /home/hardening_20200513/config ]; then if [ ! -e /etc/selinux/config ]; then touch /etc/selinux/config; fi;cp /etc/selinux/config /home/hardening_20200513/; fi;
echo -e "\nResult:"; folder="/etc/selinux/config"; standard="SELINUX=disabled"; check=`cat $folder | grep -v ^# | grep "SELINUX="`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for SELINUX"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; check=`sestatus | grep "Current mode"`; if [[ -z $check ]]; then echo "Nothing to do for selinux"; elif [[ $check == *"enforcing"* ]]; then setenforce 0; echo "Fixed selinux permissive mode"; else echo "Nothing to do for selinux"; fi; echo "";
if [ ! -e /home/hardening_20200513/limits.conf ]; then if [ ! -e /etc/security/limits.conf ]; then touch /etc/security/limits.conf; fi;cp /etc/security/limits.conf /home/hardening_20200513/; fi;
echo -e "\nResult:"; max=$((`cat /proc/meminfo | grep -i MemTotal | awk '{print $2}'`*71680/1024/1024)); curr=0; new=0; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400) {print $1}'`; for user in $list;do check=`cat /etc/security/limits.conf | grep -v ^# | grep -w $user| grep -v soft | grep -w nofile | awk '{print $4}'`; if [[ ! -z $check ]]; then echo "$user: $check"; curr=$(expr $curr + $check); else check2=`lsof -u $user | wc -l`; if [[ -z $check2 ]]; then check2=0; new=$(expr $new + 65535); elif [ $check2 -lt 33000 ]; then new=$(expr $new + 65535); else new=$(expr $new + $(($check2*2)));fi; echo "$user: chua cau hinh nofile, current openfile is $check2"; fi; done; free=$(expr $max - $curr); if [ $new -lt $free ]; then echo -e "Total openfile config is $curr \nTotal openfile server is $max \nTotal openfile free is $free \nTotal openfile config new is $new < free ==> OK\n" ; else echo -e "Total openfile config is $curr \nTotal openfile server is $max \nTotal openfile free is $free \nTotal openfile config new is $new > free ==> WARNING\n"; fi;
echo -e "\nResult:"; max=$((`cat /proc/meminfo | grep -i MemTotal | awk '{print $2}'`*71680/1024/1024)); echo $max > /proc/sys/fs/file-max; echo "Inserted max_open_file = $max to /proc/sys/fs/file-max"; conf=`cat /etc/sysctl.conf | grep -v ^# | grep -w  fs.file-max`; if [[ -z $conf ]]; then echo "fs.file-max = $max" >> /etc/sysctl.conf; echo -e "Inserted fs.file-max = $max to /etc/sysctl.conf\n"; elif [[ $conf != "fs.file-max = $max" ]]; then sed -i "s/$conf/#$conf\nfs.file-max = $max/g" /etc/sysctl.conf; echo -e "Replaced fs.file-max = $max to /etc/sysctl.conf\n"; else echo -e "Nothing to do /etc/sysctl.conf\n"; fi;
echo -e "\nResult:"; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400) {print $1}'`; for user in $list;do check=`cat /etc/security/limits.conf | grep -v ^# | grep -w $user| grep -v soft | grep -w nofile | awk '{print $4}'`; if [[ -z $check ]]; then check2=`lsof -u $user | wc -l`; if [[ -z $check2 ]]; then echo "$user - nofile 65535" >> /etc/security/limits.conf; echo "Inserted $user - nofile 65535"; elif [ $check2 -lt 33000 ]; then echo "$user - nofile 65535" >> /etc/security/limits.conf; echo "Inserted $user - nofile 65535"; else new=$(($check2*2)); echo "$user - nofile $new" >> /etc/security/limits.conf; echo "Inserted $user - nofile $new"; fi; else echo "$user: $check ==> OK"; fi; done; echo "";
echo -e "\nResult:"; max=4000000; curr=0; new=0; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400) {print $1}'`; for user in $list;do check=`cat /etc/security/limits.conf | grep -v ^# | grep -w $user| grep -v soft | grep -w nproc | awk '{print $4}'`; if [[ ! -z $check ]]; then echo "$user: $check"; curr=$(expr $curr + $check); else check2=`ps -eLf| awk '{print $1}'|sort| uniq -c | grep -w $user | awk '{print $1}'`; if [[ -z $check2 ]]; then check2=0; new=$(expr $new + 8192); elif [ $check2 -lt 4096 ]; then new=$(expr $new + 8192); else new=$(expr $new + $(($check2*2)));fi; echo "$user: chua cau hinh nofile, current openfile is $check2"; fi; done; free=$(expr $max - $curr); if [ $new -lt $free ]; then echo -e "Total process config is $curr \nTotal process server is $max \nTotal process free is $free \nTotal process config new is $new < free ==> OK\n" ; else echo -e "Total process config is $curr \nTotal process server is $max \nTotal process free is $free \nTotal process config new is $new > free ==> WARNING\n"; fi;
echo -e "\nResult:"; list=`cat /etc/passwd |grep /bin/bash  | grep -v ^# | grep -v nfsnobody | awk -F: '($3>=400) {print $1}'`; for user in $list;do check=`cat /etc/security/limits.conf | grep -v ^# | grep -w $user| grep -v soft | grep -w nproc | awk '{print $4}'`; if [[ -z $check ]]; then check2=`ps -eLf| awk '{print $1}'|sort| uniq -c | grep -w $user | awk '{print $1}'`; if [[ -z $check2 ]]; then echo "$user - nproc 8192" >> /etc/security/limits.conf; echo "Inserted $user - nproc 8192"; elif [ $check2 -lt 4096 ]; then echo "$user - nproc 8192" >> /etc/security/limits.conf; echo "Inserted $user - nproc 8192"; else new=$(($check2*2)); echo "$user - nproc $new" >> /etc/security/limits.conf; echo "Inserted $user - nproc $new"; fi; else echo "$user: $check ==> OK"; fi; done; echo "";
echo -e "\nResult:"; folder="/proc/sys/vm/swappiness"; standard="10"; check=`cat $folder | grep -v ^# | grep -w "$standard"`; if [[ -z $check ]]; then echo "$standard" >> $folder; echo "Inserted config: $standard"; elif [[ $check == $standard ]]; then echo "Nothing to do for swappiness"; else sed -i "s~$check~#$check\n$standard~g" $folder; echo "Replaced config: $standard"; fi; echo "";
echo -e "\nResult:"; check=`service bluetooth status | grep running`; if [[ -z $check ]]; then echo "Nothing to do"; else service bluetooth stop; chkconfig bluetooth off; echo "Stopped service bluetooth"; fi; echo "";
a1=`sysctl -a | grep -iw vm.swappiness`; [[ `echo $a1| awk '{print $3}'` -le 10 ]] && echo updated to recommended setting before || (echo update to recommended setting; echo $a1 1> /home/hardening_20200513/vm.swappiness; sed -i '/^vm.swappiness/d' /etc/sysctl.conf; echo vm.swappiness = 10 >> /etc/sysctl.conf; sysctl -w vm.swappiness=10)
find / -xdev \( -nouser -o -nogroup \) -print > /home/hardening_20200513/unowner_file.txt
echo -e "\nResult:"; check=`find / -xdev \( -nouser -o -nogroup \) -print`; if [[ -z $check ]]; then echo "Khong co file unowner ==> OK"; else for i in $check; do chown monitor:monitor $i; done; echo "Changed unowner file";fi; echo "";
